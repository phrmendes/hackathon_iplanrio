services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  app:
    build:
      dockerfile: app.Dockerfile
    restart: always
    ports:
      - 8000:8000
    env_file:
      - .env
    command: bash -c "uv run uvicorn licitacaorio.asgi:application --host 0.0.0.0 --port 8000 --reload"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app
        - action: rebuild
          path: ./app/pyproject.toml

  web:
    build: 
      dockerfile: fastapi.Dockerfile
    ports:
      - 8001:8001
    volumes:
      - ./ollama/fastapi:/app

    networks:
      - ollama-net

  ollama:
    build: 
      dockerfile: ollama.Dockerfile
    ports:
      - 11434:11434
    volumes:
      - ollama_answers:/ollama
    networks:
      - ollama-net
    entrypoint: ["/usr/bin/bash", "/pull-llama3.sh"]

volumes:
  postgres_data:
  ollama_answers:
    driver: local

networks:
  ollama-net:
    driver: bridge
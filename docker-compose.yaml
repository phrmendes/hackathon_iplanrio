services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - db

  ollama:
    build:
      dockerfile: ./ollama/ollama.Dockerfile
    restart: always
    volumes:
      - ollama:/root/.ollama
    networks:
      - ollama

  ollama-api:
    build:
      dockerfile: ./ollama/ollama-api.Dockerfile
    networks:
      - ollama
      - dashboard
    depends_on:
      - ollama

  licitacaorio:
    build:
      dockerfile: ./licitacaorio/licitacaorio.Dockerfile
      args:
        SECRET_KEY: ${SECRET_KEY}
    env_file: .env
    networks:
      - licitacaorio
      - db
    volumes:
      - static:/app/assets
    depends_on:
      - db
      - ollama
      - ollama-api
      - dashboard

  nginx-licitacaorio:
    build:
      dockerfile: ./licitacaorio/nginx.Dockerfile
    ports:
      - 1337:80
    depends_on:
      - licitacaorio
    networks:
      - licitacaorio
    volumes:
      - static:/app/assets

  dashboard:
    restart: always
    build:
      dockerfile: ./dashboard/dashboard.Dockerfile
    networks:
      - db
      - ollama
      - dashboard

  nginx-dashboard:
    build:
      dockerfile: ./dashboard/nginx.Dockerfile
    depends_on:
      - dashboard
    networks:
      - licitacaorio
      - dashboard

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: ["tunnel", "--no-autoupdate", "run"]
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARE_TOKEN}
    networks:
      - licitacaorio

volumes:
  postgres:
  ollama:
  static:

networks:
  licitacaorio:
    driver: bridge
  ollama:
    driver: bridge
  dashboard:
    driver: bridge
  db:
    driver: bridge
